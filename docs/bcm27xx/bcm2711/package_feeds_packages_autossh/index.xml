<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package_feeds_packages_autossh on Opde Issues Tracker</title>
    <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/</link>
    <description>Recent content in package_feeds_packages_autossh on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Jun 2021 07:38:18 +0000</lastBuildDate>
    
	<atom:link href="https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.27</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:38:18 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:30:39 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:12:10 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:45:49 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:39:40 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:15 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
  </channel>
</rss>