<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package_feeds_packages_libextractor on Opde Issues Tracker</title>
    <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libextractor/</link>
    <description>Recent content in package_feeds_packages_libextractor on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Jun 2021 09:30:58 +0000</lastBuildDate>
    
	<atom:link href="https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libextractor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.42</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libextractor/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:30:58 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libextractor/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libextractor/compile -j$(nproc) || make package/feeds/packages/libextractor/compile V=s Compile.txt Applying ./patches/010-musl.patch using plaintext: patching file src/common/le_architecture.h Applying ./patches/020-jpeg.patch using plaintext: patching file src/plugins/jpeg_extractor.c configure: loading site script /openwrt/include/site/aarch64 checking build system type... x86_64-pc-linux-gnu checking host system type.</description>
    </item>
    
  </channel>
</rss>