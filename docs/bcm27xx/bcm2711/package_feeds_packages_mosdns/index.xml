<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package_feeds_packages_mosdns on Opde Issues Tracker</title>
    <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mosdns/</link>
    <description>Recent content in package_feeds_packages_mosdns on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Jul 2021 08:49:59 +0000</lastBuildDate>
    
	<atom:link href="https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mosdns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.4</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mosdns/compile.4/</link>
      <pubDate>Thu, 01 Jul 2021 08:49:59 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mosdns/compile.4/</guid>
      <description>build number: 4
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosdns/compile -j$(nproc) || make package/feeds/packages/mosdns/compile V=s Compile.txt Copying files from /openwrt/build_dir/target-aarch64_cortex-a72_musl/mosdns-1.8.6 into /openwrt/build_dir/target-aarch64_cortex-a72_musl/mosdns-1.8.6/.go_work/build/src/github.com/IrineSistiana/mosdns dispatcher/coremain/config.go dispatcher/coremain/run.go dispatcher/handler/config.go dispatcher/handler/config_test.go dispatcher/handler/context.go dispatcher/handler/context_test.go dispatcher/handler/error.go dispatcher/handler/interface.go dispatcher/handler/plugin_wrapper.go dispatcher/handler/register.go dispatcher/handler/register_test.go dispatcher/handler/test_utils.go dispatcher/mlog/logger.go dispatcher/pkg/arbitrary/arbitrary.go dispatcher/pkg/arbitrary/arbitrary_test.go dispatcher/pkg/cache/cache.go dispatcher/pkg/cache/mem_cache/mem_cache.go dispatcher/pkg/cache/mem_cache/mem_cache_test.go dispatcher/pkg/cache/redis_cache/redis_cache.go dispatcher/pkg/cache/redis_cache/redis_cache_test.go dispatcher/pkg/concurrent_limiter/client_limiter.</description>
    </item>
    
  </channel>
</rss>