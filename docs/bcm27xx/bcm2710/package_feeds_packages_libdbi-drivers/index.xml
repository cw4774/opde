<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package_feeds_packages_libdbi-drivers on Opde Issues Tracker</title>
    <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_libdbi-drivers/</link>
    <description>Recent content in package_feeds_packages_libdbi-drivers on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Oct 2021 01:44:55 +0000</lastBuildDate>
    
	<atom:link href="https://immortalwrt.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_libdbi-drivers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.34</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_libdbi-drivers/compile.34/</link>
      <pubDate>Sun, 31 Oct 2021 01:44:55 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_libdbi-drivers/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libdbi-drivers/compile -j$(nproc) || make package/feeds/packages/libdbi-drivers/compile V=s Compile.txt Applying ./patches/001_libsqlite3_fix.patch using plaintext: patching file acinclude.m4 Applying ./patches/100-remove-date-to-fix-reproducible-builds.patch using plaintext: patching file drivers/db2/dbd_db2.c patching file drivers/firebird/dbd_firebird.c patching file drivers/freetds/dbd_freetds.c patching file drivers/ingres/dbd_ingres.c patching file drivers/msql/dbd_msql.c patching file drivers/mysql/dbd_mysql.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_libdbi-drivers/compile.23/</link>
      <pubDate>Fri, 27 Aug 2021 07:29:15 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_libdbi-drivers/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libdbi-drivers/compile -j$(nproc) || make package/feeds/packages/libdbi-drivers/compile V=s Compile.txt Applying ./patches/001_libsqlite3_fix.patch using plaintext: patching file acinclude.m4 Applying ./patches/100-remove-date-to-fix-reproducible-builds.patch using plaintext: patching file drivers/db2/dbd_db2.c patching file drivers/firebird/dbd_firebird.c patching file drivers/freetds/dbd_freetds.c patching file drivers/ingres/dbd_ingres.c patching file drivers/msql/dbd_msql.c patching file drivers/mysql/dbd_mysql.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://immortalwrt.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_libdbi-drivers/compile.22/</link>
      <pubDate>Fri, 20 Aug 2021 09:29:22 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_libdbi-drivers/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libdbi-drivers/compile -j$(nproc) || make package/feeds/packages/libdbi-drivers/compile V=s Compile.txt Applying ./patches/001_libsqlite3_fix.patch using plaintext: patching file acinclude.m4 Applying ./patches/100-remove-date-to-fix-reproducible-builds.patch using plaintext: patching file drivers/db2/dbd_db2.c patching file drivers/firebird/dbd_firebird.c patching file drivers/freetds/dbd_freetds.c patching file drivers/ingres/dbd_ingres.c patching file drivers/msql/dbd_msql.c patching file drivers/mysql/dbd_mysql.</description>
    </item>
    
  </channel>
</rss>