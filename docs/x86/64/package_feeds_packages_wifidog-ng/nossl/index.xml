<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nossl on Opde Issues Tracker</title>
    <link>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/</link>
    <description>Recent content in nossl on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Oct 2021 22:47:11 +0000</lastBuildDate>
    
	<atom:link href="https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.32</title>
      <link>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/compile.32/</link>
      <pubDate>Tue, 12 Oct 2021 22:47:11 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/wifidog-ng/compile -j$(nproc) || make package/feeds/packages/wifidog-ng/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-4.19.209&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/main.o CC [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/config.o LD [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.o Building modules, stage 2. MODPOST 1 modules CC /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.mod.o LD [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.ko make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-4.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/compile.27/</link>
      <pubDate>Wed, 06 Oct 2021 21:53:49 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/wifidog-ng/compile -j$(nproc) || make package/feeds/packages/wifidog-ng/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-4.19.206&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/main.o CC [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/config.o LD [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.o Building modules, stage 2. MODPOST 1 modules CC /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.mod.o LD [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.ko make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-4.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/compile.25/</link>
      <pubDate>Fri, 10 Sep 2021 11:12:32 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/wifidog-ng/compile -j$(nproc) || make package/feeds/packages/wifidog-ng/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-4.19.206&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/main.o CC [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/config.o LD [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.o Building modules, stage 2. MODPOST 1 modules CC /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.mod.o LD [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.ko make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-4.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/compile.20/</link>
      <pubDate>Thu, 19 Aug 2021 01:46:57 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_wifidog-ng/nossl/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/wifidog-ng/compile -j$(nproc) || make package/feeds/packages/wifidog-ng/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-4.19.204&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/main.o CC [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/config.o LD [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.o Building modules, stage 2. MODPOST 1 modules CC /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.mod.o LD [M] /openwrt/build_dir/target-x86_64_musl/wifidog-ng-nossl/wifidog-ng.ko make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-4.</description>
    </item>
    
  </channel>
</rss>