<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package_feeds_packages_node-red on Opde Issues Tracker</title>
    <link>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_node-red/</link>
    <description>Recent content in package_feeds_packages_node-red on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Jun 2021 21:52:39 +0000</lastBuildDate>
    
	<atom:link href="https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_node-red/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.30</title>
      <link>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_node-red/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:52:39 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/x86/64/package_feeds_packages_node-red/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-red/compile -j$(nproc) || make package/feeds/packages/node-red/compile V=s Compile.txt npm info it worked if it ends with ok npm info using npm@6.14.13 npm info using node@v14.17.0 npm info lifecycle node-red@1.3.5~preinstall: node-red@1.3.5 npm timing stage:loadCurrentTree Completed in 11ms npm timing stage:loadIdealTree:cloneCurrentTree Completed in 1ms npm timing stage:loadIdealTree:loadShrinkwrap Completed in 1ms npm http fetch GET 200 https://registry.</description>
    </item>
    
  </channel>
</rss>