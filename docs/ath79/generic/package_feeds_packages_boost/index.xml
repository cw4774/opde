<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package_feeds_packages_boost on Opde Issues Tracker</title>
    <link>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/</link>
    <description>Recent content in package_feeds_packages_boost on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Nov 2021 16:08:43 +0000</lastBuildDate>
    
	<atom:link href="https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.40</title>
      <link>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boost/compile -j$(nproc) || make package/feeds/packages/boost/compile V=s Compile.txt Selected Boost API o32 for architecture mips and cpu type &amp;#34;24kc&amp;#34; Applying ./patches/010-mips64-fiber.patch using plaintext: patching file boost/fiber/detail/cpu_relax.hpp Applying ./patches/020-regex.patch using plaintext: patching file boost/regex/v5/mem_block_cache.hpp Performing configuration checks - default address-model : 32-bit [1] - default architecture : mips1 [1] - C++11 mutex : yes [2] - lockfree boost::atomic_flag : yes [2] - has stat::st_mtim : yes [2] - has stat::st_mtimensec : no [2] - has stat::st_mtimespec : no [2] - has stat::st_birthtim : no [2] - has stat::st_birthtimensec : no [2] - has stat::st_birthtimespec : no [2] - has statx : no [2] - has statx syscall : yes [2] - cxx11_auto_declarations : yes [2] - cxx11_constexpr : yes [2] - cxx11_defaulted_functions : yes [2] - cxx11_final : yes [2] - cxx11_hdr_mutex : yes [2] - cxx11_hdr_tuple : yes [2] - cxx11_lambdas : yes [2] - cxx11_noexcept : yes [2] - cxx11_nullptr : yes [2] - cxx11_rvalue_references : yes [2] - cxx11_template_aliases : yes [2] - cxx11_thread_local : yes [2] - cxx11_variadic_templates : yes [2] - cxx11_auto_declarations : yes [3] - cxx11_constexpr : yes [3] - cxx11_defaulted_functions : yes [3] - cxx11_final : yes [3] - cxx11_hdr_mutex : yes [3] - cxx11_hdr_tuple : yes [3] - cxx11_lambdas : yes [3] - cxx11_noexcept : yes [3] - cxx11_nullptr : yes [3] - cxx11_rvalue_references : yes [3] - cxx11_template_aliases : yes [3] - cxx11_thread_local : yes [3] - cxx11_variadic_templates : yes [3] - has_icu builds : yes [2] - zlib : yes [4] - lzma : yes [4] - zstd : yes [4] - has_lzma_cputhreads builds : no [2] - cxx11_decltype : yes [2] - cxx11_basic_alignas : yes [2] - iconv (libc) : yes [2] - icu : yes [2] - native atomic int32 supported : yes [2] - native syslog supported : yes [2] - pthread supports robust mutexes : yes [2] - gcc visibility : yes [2] - sfinae_expr : yes [2] - cxx11_unified_initialization_syntax : yes [2] - cxx11_hdr_initializer_list : yes [2] - cxx11_hdr_chrono : yes [2] - cxx11_numeric_limits : yes [2] - cxx11_hdr_array : yes [2] - cxx11_hdr_atomic : yes [2] - cxx11_hdr_type_traits : yes [2] - cxx11_allocator : yes [2] - cxx11_explicit_conversion_operators : yes [2] - long double support : yes [2] - cxx11_static_assert : yes [2] - std::fstream is moveable and swappable : yes [2] - Has Large File Support : yes [2] - libbacktrace builds : no [2] - libbacktrace builds : no [3] - addr2line builds : no [2] - addr2line builds : no [3] - WinDbg builds : no [2] - WinDbg builds : no [3] - WinDbgCached builds : no [2] - WinDbgCached builds : no [3] - C++11 mutex : yes [5] - lockfree boost::atomic_flag : yes [5] - has stat::st_mtim : yes [5] - has stat::st_mtimensec : no [5] - has stat::st_mtimespec : no [5] - has stat::st_birthtim : no [5] - has stat::st_birthtimensec : no [5] - has stat::st_birthtimespec : no [5] - has statx : no [5] - has statx syscall : yes [5] - cxx11_auto_declarations : yes [5] - cxx11_constexpr : yes [5] - cxx11_defaulted_functions : yes [5] - cxx11_final : yes [5] - cxx11_hdr_mutex : yes [5] - cxx11_hdr_tuple : yes [5] - cxx11_lambdas : yes [5] - cxx11_noexcept : yes [5] - cxx11_nullptr : yes [5] - cxx11_rvalue_references : yes [5] - cxx11_template_aliases : yes [5] - cxx11_thread_local : yes [5] - cxx11_variadic_templates : yes [5] - cxx11_auto_declarations : yes [6] - cxx11_constexpr : yes [6] - cxx11_defaulted_functions : yes [6] - cxx11_final : yes [6] - cxx11_hdr_mutex : yes [6] - cxx11_hdr_tuple : yes [6] - cxx11_lambdas : yes [6] - cxx11_noexcept : yes [6] - cxx11_nullptr : yes [6] - cxx11_rvalue_references : yes [6] - cxx11_template_aliases : yes [6] - cxx11_thread_local : yes [6] - cxx11_variadic_templates : yes [6] - has_icu builds : yes [5] - zlib : yes - lzma : yes - zstd : yes - has_lzma_cputhreads builds : yes [5] - cxx11_decltype : yes [5] - cxx11_basic_alignas : yes [5] - iconv (libc) : yes [5] - icu : yes [5] - native atomic int32 supported : yes [5] - native syslog supported : yes [5] - pthread supports robust mutexes : yes [5] - gcc visibility : yes [5] - sfinae_expr : yes [5] - cxx11_unified_initialization_syntax : yes [5] - cxx11_hdr_initializer_list : yes [5] - cxx11_hdr_chrono : yes [5] - cxx11_numeric_limits : yes [5] - cxx11_hdr_array : yes [5] - cxx11_hdr_atomic : yes [5] - cxx11_hdr_type_traits : yes [5] - cxx11_allocator : yes [5] - cxx11_explicit_conversion_operators : yes [5] - long double support : yes [5] - cxx11_static_assert : yes [5] - std::fstream is moveable and swappable : yes [5] - Has Large File Support : yes [5] - libbacktrace builds : no [5] - libbacktrace builds : no [6] - addr2line builds : no [5] - addr2line builds : no [6] - WinDbg builds : no [5] - WinDbg builds : no [6] - WinDbgCached builds : no [5] - WinDbgCached builds : no [6] [1] gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boost/compile -j$(nproc) || make package/feeds/packages/boost/compile V=s Compile.txt Selected Boost API o32 for architecture mips and cpu type &amp;#34;24kc&amp;#34; Applying ./patches/010-mips64-fiber.patch using plaintext: patching file boost/fiber/detail/cpu_relax.hpp Applying ./patches/020-regex.patch using plaintext: patching file boost/regex/v5/mem_block_cache.hpp Performing configuration checks - default address-model : 32-bit [1] - default architecture : mips1 [1] - C++11 mutex : yes [2] - lockfree boost::atomic_flag : yes [2] - has stat::st_mtim : yes [2] - has stat::st_mtimensec : no [2] - has stat::st_mtimespec : no [2] - has stat::st_birthtim : no [2] - has stat::st_birthtimensec : no [2] - has stat::st_birthtimespec : no [2] - has statx : no [2] - has statx syscall : yes [2] - cxx11_auto_declarations : yes [2] - cxx11_constexpr : yes [2] - cxx11_defaulted_functions : yes [2] - cxx11_final : yes [2] - cxx11_hdr_mutex : yes [2] - cxx11_hdr_tuple : yes [2] - cxx11_lambdas : yes [2] - cxx11_noexcept : yes [2] - cxx11_nullptr : yes [2] - cxx11_rvalue_references : yes [2] - cxx11_template_aliases : yes [2] - cxx11_thread_local : yes [2] - cxx11_variadic_templates : yes [2] - cxx11_auto_declarations : yes [3] - cxx11_constexpr : yes [3] - cxx11_defaulted_functions : yes [3] - cxx11_final : yes [3] - cxx11_hdr_mutex : yes [3] - cxx11_hdr_tuple : yes [3] - cxx11_lambdas : yes [3] - cxx11_noexcept : yes [3] - cxx11_nullptr : yes [3] - cxx11_rvalue_references : yes [3] - cxx11_template_aliases : yes [3] - cxx11_thread_local : yes [3] - cxx11_variadic_templates : yes [3] - has_icu builds : yes [2] - zlib : yes [4] - lzma : yes [4] - zstd : yes [4] - has_lzma_cputhreads builds : no [2] - cxx11_decltype : yes [2] - cxx11_basic_alignas : yes [2] - iconv (libc) : yes [2] - icu : yes [2] - native atomic int32 supported : yes [2] - native syslog supported : yes [2] - pthread supports robust mutexes : yes [2] - gcc visibility : yes [2] - sfinae_expr : yes [2] - cxx11_unified_initialization_syntax : yes [2] - cxx11_hdr_initializer_list : yes [2] - cxx11_hdr_chrono : yes [2] - cxx11_numeric_limits : yes [2] - cxx11_hdr_array : yes [2] - cxx11_hdr_atomic : yes [2] - cxx11_hdr_type_traits : yes [2] - cxx11_allocator : yes [2] - cxx11_explicit_conversion_operators : yes [2] - long double support : yes [2] - cxx11_static_assert : yes [2] - std::fstream is moveable and swappable : yes [2] - Has Large File Support : yes [2] - libbacktrace builds : no [2] - libbacktrace builds : no [3] - addr2line builds : no [2] - addr2line builds : no [3] - WinDbg builds : no [2] - WinDbg builds : no [3] - WinDbgCached builds : no [2] - WinDbgCached builds : no [3] - C++11 mutex : yes [5] - lockfree boost::atomic_flag : yes [5] - has stat::st_mtim : yes [5] - has stat::st_mtimensec : no [5] - has stat::st_mtimespec : no [5] - has stat::st_birthtim : no [5] - has stat::st_birthtimensec : no [5] - has stat::st_birthtimespec : no [5] - has statx : no [5] - has statx syscall : yes [5] - cxx11_auto_declarations : yes [5] - cxx11_constexpr : yes [5] - cxx11_defaulted_functions : yes [5] - cxx11_final : yes [5] - cxx11_hdr_mutex : yes [5] - cxx11_hdr_tuple : yes [5] - cxx11_lambdas : yes [5] - cxx11_noexcept : yes [5] - cxx11_nullptr : yes [5] - cxx11_rvalue_references : yes [5] - cxx11_template_aliases : yes [5] - cxx11_thread_local : yes [5] - cxx11_variadic_templates : yes [5] - cxx11_auto_declarations : yes [6] - cxx11_constexpr : yes [6] - cxx11_defaulted_functions : yes [6] - cxx11_final : yes [6] - cxx11_hdr_mutex : yes [6] - cxx11_hdr_tuple : yes [6] - cxx11_lambdas : yes [6] - cxx11_noexcept : yes [6] - cxx11_nullptr : yes [6] - cxx11_rvalue_references : yes [6] - cxx11_template_aliases : yes [6] - cxx11_thread_local : yes [6] - cxx11_variadic_templates : yes [6] - has_icu builds : yes [5] - zlib : yes - lzma : yes - zstd : yes - has_lzma_cputhreads builds : yes [5] - cxx11_decltype : yes [5] - cxx11_basic_alignas : yes [5] - iconv (libc) : yes [5] - icu : yes [5] - native atomic int32 supported : yes [5] - native syslog supported : yes [5] - pthread supports robust mutexes : yes [5] - gcc visibility : yes [5] - sfinae_expr : yes [5] - cxx11_unified_initialization_syntax : yes [5] - cxx11_hdr_initializer_list : yes [5] - cxx11_hdr_chrono : yes [5] - cxx11_numeric_limits : yes [5] - cxx11_hdr_array : yes [5] - cxx11_hdr_atomic : yes [5] - cxx11_hdr_type_traits : yes [5] - cxx11_allocator : yes [5] - cxx11_explicit_conversion_operators : yes [5] - long double support : yes [5] - cxx11_static_assert : yes [5] - std::fstream is moveable and swappable : yes [5] - Has Large File Support : yes [5] - libbacktrace builds : no [5] - libbacktrace builds : no [6] - addr2line builds : no [5] - addr2line builds : no [6] - WinDbg builds : no [5] - WinDbg builds : no [6] - WinDbgCached builds : no [5] - WinDbgCached builds : no [6] [1] gcc-8.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.36/</link>
      <pubDate>Sat, 27 Nov 2021 16:08:43 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boost/compile -j$(nproc) || make package/feeds/packages/boost/compile V=s Compile.txt Selected Boost API o32 for architecture mips and cpu type &amp;#34;24kc&amp;#34; Applying ./patches/010-sparc.patch using plaintext: patching file boost/predef/architecture/sparc.h Applying ./patches/020-math.patch using plaintext: patching file boost/math/special_functions/detail/bernoulli_details.hpp patching file boost/math/tools/atomic.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.35/</link>
      <pubDate>Sun, 14 Nov 2021 19:13:32 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boost/compile -j$(nproc) || make package/feeds/packages/boost/compile V=s Compile.txt Selected Boost API o32 for architecture mips and cpu type &amp;#34;24kc&amp;#34; Applying ./patches/010-sparc.patch using plaintext: patching file boost/predef/architecture/sparc.h Applying ./patches/020-math.patch using plaintext: patching file boost/math/special_functions/detail/bernoulli_details.hpp patching file boost/math/tools/atomic.</description>
    </item>
    
    <item>
      <title>compile.5</title>
      <link>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.5/</link>
      <pubDate>Thu, 01 Jul 2021 17:06:20 +0000</pubDate>
      
      <guid>https://immortalwrt.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.5/</guid>
      <description>build number: 5
re-implement command docker pull immortalwrt/opde:sdk docker run -it --rm immortalwrt/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boost/compile -j$(nproc) || make package/feeds/packages/boost/compile V=s Compile.txt Selected Boost API o32 for architecture mips and cpu type &amp;#34;24kc&amp;#34; Applying ./patches/010-mips64-fiber.patch using plaintext: patching file boost/fiber/detail/cpu_relax.hpp Applying ./patches/020-regex.patch using plaintext: patching file boost/regex/v5/mem_block_cache.hpp Performing configuration checks - default address-model : 32-bit [1] - default architecture : mips1 [1] - C++11 mutex : yes [2] - lockfree boost::atomic_flag : yes [2] - has stat::st_mtim : yes [2] - has stat::st_mtimensec : no [2] - has stat::st_mtimespec : no [2] - has stat::st_birthtim : no [2] - has stat::st_birthtimensec : no [2] - has stat::st_birthtimespec : no [2] - has statx : no [2] - has statx syscall : yes [2] - cxx11_auto_declarations : yes [2] - cxx11_constexpr : yes [2] - cxx11_defaulted_functions : yes [2] - cxx11_final : yes [2] - cxx11_hdr_mutex : yes [2] - cxx11_hdr_tuple : yes [2] - cxx11_lambdas : yes [2] - cxx11_noexcept : yes [2] - cxx11_nullptr : yes [2] - cxx11_rvalue_references : yes [2] - cxx11_template_aliases : yes [2] - cxx11_thread_local : yes [2] - cxx11_variadic_templates : yes [2] - cxx11_auto_declarations : yes [3] - cxx11_constexpr : yes [3] - cxx11_defaulted_functions : yes [3] - cxx11_final : yes [3] - cxx11_hdr_mutex : yes [3] - cxx11_hdr_tuple : yes [3] - cxx11_lambdas : yes [3] - cxx11_noexcept : yes [3] - cxx11_nullptr : yes [3] - cxx11_rvalue_references : yes [3] - cxx11_template_aliases : yes [3] - cxx11_thread_local : yes [3] - cxx11_variadic_templates : yes [3] - has_icu builds : yes [2] - zlib : yes [4] - lzma : yes [4] - zstd : yes [4] - has_lzma_cputhreads builds : no [2] - cxx11_decltype : yes [2] - cxx11_basic_alignas : yes [2] - iconv (libc) : yes [2] - icu : yes [2] - native atomic int32 supported : yes [2] - native syslog supported : yes [2] - pthread supports robust mutexes : yes [2] - gcc visibility : yes [2] - sfinae_expr : yes [2] - cxx11_unified_initialization_syntax : yes [2] - cxx11_hdr_initializer_list : yes [2] - cxx11_hdr_chrono : yes [2] - cxx11_numeric_limits : yes [2] - cxx11_hdr_array : yes [2] - cxx11_hdr_atomic : yes [2] - cxx11_hdr_type_traits : yes [2] - cxx11_allocator : yes [2] - cxx11_explicit_conversion_operators : yes [2] - long double support : yes [2] - cxx11_static_assert : yes [2] - std::fstream is moveable and swappable : yes [2] - Has Large File Support : yes [2] - libbacktrace builds : no [2] - libbacktrace builds : no [3] - addr2line builds : no [2] - addr2line builds : no [3] - WinDbg builds : no [2] - WinDbg builds : no [3] - WinDbgCached builds : no [2] - WinDbgCached builds : no [3] - C++11 mutex : yes [5] - lockfree boost::atomic_flag : yes [5] - has stat::st_mtim : yes [5] - has stat::st_mtimensec : no [5] - has stat::st_mtimespec : no [5] - has stat::st_birthtim : no [5] - has stat::st_birthtimensec : no [5] - has stat::st_birthtimespec : no [5] - has statx : no [5] - has statx syscall : yes [5] - cxx11_auto_declarations : yes [5] - cxx11_constexpr : yes [5] - cxx11_defaulted_functions : yes [5] - cxx11_final : yes [5] - cxx11_hdr_mutex : yes [5] - cxx11_hdr_tuple : yes [5] - cxx11_lambdas : yes [5] - cxx11_noexcept : yes [5] - cxx11_nullptr : yes [5] - cxx11_rvalue_references : yes [5] - cxx11_template_aliases : yes [5] - cxx11_thread_local : yes [5] - cxx11_variadic_templates : yes [5] - cxx11_auto_declarations : yes [6] - cxx11_constexpr : yes [6] - cxx11_defaulted_functions : yes [6] - cxx11_final : yes [6] - cxx11_hdr_mutex : yes [6] - cxx11_hdr_tuple : yes [6] - cxx11_lambdas : yes [6] - cxx11_noexcept : yes [6] - cxx11_nullptr : yes [6] - cxx11_rvalue_references : yes [6] - cxx11_template_aliases : yes [6] - cxx11_thread_local : yes [6] - cxx11_variadic_templates : yes [6] - has_icu builds : yes [5] - zlib : yes - lzma : yes - zstd : yes - has_lzma_cputhreads builds : yes [5] - cxx11_decltype : yes [5] - cxx11_basic_alignas : yes [5] - iconv (libc) : yes [5] - icu : yes [5] - native atomic int32 supported : yes [5] - native syslog supported : yes [5] - pthread supports robust mutexes : yes [5] - gcc visibility : yes [5] - sfinae_expr : yes [5] - cxx11_unified_initialization_syntax : yes [5] - cxx11_hdr_initializer_list : yes [5] - cxx11_hdr_chrono : yes [5] - cxx11_numeric_limits : yes [5] - cxx11_hdr_array : yes [5] - cxx11_hdr_atomic : yes [5] - cxx11_hdr_type_traits : yes [5] - cxx11_allocator : yes [5] - cxx11_explicit_conversion_operators : yes [5] - long double support : yes [5] - cxx11_static_assert : yes [5] - std::fstream is moveable and swappable : yes [5] - Has Large File Support : yes [5] - libbacktrace builds : no [5] - libbacktrace builds : no [6] - addr2line builds : no [5] - addr2line builds : no [6] - WinDbg builds : no [5] - WinDbg builds : no [6] - WinDbgCached builds : no [5] - WinDbgCached builds : no [6] [1] gcc-8.</description>
    </item>
    
  </channel>
</rss>