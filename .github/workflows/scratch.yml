name: Scratch

on:
  workflow_dispatch:
    inputs:
      chinese:
        description: "Use chinese apt, pip mirrors(0,1)"
        required: false
        default: "0"
      boostrap:
        description: "First Time Run(0,1)"
        required: false
        default: "0"
      branch:
        description: "Source branch(master,openwrt-18.06,...)"
        required: false
        default: "master"
      target:
        description: "Target(x86,bcm27xx,...)"
        required: false
        default: "x86"
      subtarget:
        description: "Subtarget(64,bcm2711,...)"
        required: false
        default: "64"
      dlsvr:
        description: "upload to download server(0,1)"
        required: false
        default: "0"
      subsequent:
        description: "run subsequent workflow(0,1)"
        required: false
        default: "0"
  schedule:
    - cron: "0 0 1 * *" # every month
jobs:
  scratch:
    runs-on: ubuntu-latest
    steps:
      - name: show input
        run: |-
          echo "Use chinese apt, pip mirrors: ${{ github.event.inputs.chinese }}"
          echo "First Time Run: ${{ github.event.inputs.boostrap }}"
          echo "Source branch: ${{ github.event.inputs.branch }}"
          echo "Target: ${{ github.event.inputs.target }}"
          echo "Subtarget: ${{ github.event.inputs.subtarget }}"
          echo "upload to download server: ${{ github.event.inputs.dlsvr }}"
          echo "run subsequent workflow: ${{ github.event.inputs.subsequent }}"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: var
        run: |-
          dateDot=$(date +'%y.%m')
          echo $dateDot
          echo "::set-output name=dateDot::$dateDot"
      - name: Build and push base
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.base
          platforms: linux/amd64
          build-args: |
            CHINESE_APT_MIRRORS=${{ github.event.inputs.chinese }}
            CHINESE_PIP_MIRRORS=${{ github.event.inputs.chinese }}
            TARGET=${{ github.event.inputs.target }}
            SUBTARGET=${{ github.event.inputs.subtarget }}
          # TODO: verify target and subtarget is aliable
          push: true
          tags: |
            immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
      - name: set default docker tag
        run: |-
          docker pull immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
          docker tag immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:base
          docker tag immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}
          docker images
      - name: push default docker tag1
        if: ${{ github.event.inputs.target == 'x86' && github.event.inputs.subtarget == '64' && github.event.inputs.branch == 'master' }}
        run: docker push immortalwrt/opde:base
      - name: push default docker tag2
        if: ${{ github.event.inputs.branch == 'master' }}
        run: docker push immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}
      - name: Invoke Base workflow
        if: ${{ github.event.inputs.subsequent == '1' || github.event_name == 'schedule'}}
        uses: benc-uk/workflow-dispatch@master
        with:
          workflow: Base
          token: ${{ secrets.BOT_PERSONAL_TOKEN }}
          inputs: '{ "subsequent": "1", "branch": "${{ github.event.inputs.branch }}", "target": "${{ github.event.inputs.target }}", "subtarget": "${{ github.event.inputs.subtarget }}", "dlsvr": "${{ github.event.inputs.dlsvr }}", "boostrap": "${{ github.event.inputs.boostrap }}"}'
