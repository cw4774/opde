name: Base

on:
  workflow_dispatch:
    inputs:
      boostrap:
        description: "First Time Run(0,1)"
        required: false
        default: "0"
      branch:
        description: "Source branch(master,openwrt-18.06,...)"
        required: false
        default: "master"
      target:
        description: "Target(x86,bcm27xx,...)"
        required: false
        default: "x86"
      subtarget:
        description: "Subtarget(64,bcm2711,...)"
        required: false
        default: "64"
      dlsvr:
        description: "upload to download server(0,1)"
        required: false
        default: "0"
      subsequent:
        description: "run subsequent workflow(0,1)"
        required: false
        default: "0"
jobs:
  base:
    runs-on: ubuntu-latest
    steps:
      - name: show input
        run: |-
          echo "First Time Run: ${{ github.event.inputs.boostrap }}"
          echo "Source branch: ${{ github.event.inputs.branch }}"
          echo "Target: ${{ github.event.inputs.target }}"
          echo "Subtarget: ${{ github.event.inputs.subtarget }}"
          echo "upload to download server: ${{ github.event.inputs.dlsvr }}"
          echo "run subsequent workflow: ${{ github.event.inputs.subsequent }}"
      - name: Free disk space
        run: |
          sudo -E swapoff -a
          sudo -E rm -f /swapfile
          sudo -E docker image prune -a -f
          sudo -E snap set system refresh.retain=2
          sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu* powershell* msodbc*
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
          [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - name: Checkout opde repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Checkout OpenWRT repo
        uses: actions/checkout@v2
        with:
          repository: immortalwrt/immortalwrt
          submodules: true
          path: ./openwrt
          ref: ${{ github.event.inputs.branch }}
      - name: Checkout Opde database
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          submodules: true
          path: ./db
      - name: pull docker image
        run: |-
          docker pull immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
          docker tag immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:base
          docker images
      - name: Fix premission
        run: |
          touch ./db/logs.db.json # create if not-exist
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base sudo chown opde:opde -R /openwrt
          docker run -v $PWD/db:/db immortalwrt/opde:base sudo chown opde:opde -R /db
      - name: Opde feeds
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base opde feeds
      - name: Opde patch
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base opde patch
      - name: Opde config
        run: |
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base opde config -ke -ib -sdk
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base cat .opde/min-config.in
      - name: Opde download
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base opde download
      - name: Opde build
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base opde build
      - name: Bundle Logs
        run: |
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base tar -czvf opde.tar.gz logs .opde
      - name: Fix premission
        run: sudo chown $(id -u -n):$(id -g -n) -R opde.tar.gz
        working-directory: openwrt
      - name: Upload Logs
        uses: actions/upload-artifact@v2
        with:
          name: Base
          path: ./openwrt/opde.tar.gz
      - name: Bundle Artifacts
        run: |
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base tar -czvf bin.tar.gz bin
      - name: Fix premission
        run: sudo chown $(id -u -n):$(id -g -n) -R logs bin .opde
        working-directory: openwrt
      #- name: Opde check
      #  run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:base opde check .opde/db ${{github.run_number}}
      - id: sdk-var2
        run: |
          SDK_PATH=$(find ./openwrt/bin -name "*sdk*")
          echo "::set-output name=SDK_PATH::$SDK_PATH"
          SDK_NAME=$(basename $SDK_PATH)
          echo "::set-output name=SDK_NAME::$SDK_NAME"
          SDK_NAME_NO_PREFIX=${SDK_NAME:0:-7}
          echo "::set-output name=SDK_NAME_NO_PREFIX::$SDK_NAME_NO_PREFIX"
          IB_PATH=$(find ./openwrt/bin -name "*imagebuilder*")
          echo "::set-output name=IB_PATH::$IB_PATH"
          IB_NAME=$(basename $IB_PATH)
          echo "::set-output name=IB_NAME::$IB_NAME"
          IB_NAME_NO_PREFIX=${IB_NAME:0:-7}
          echo "::set-output name=IB_NAME_NO_PREFIX::$IB_NAME_NO_PREFIX"
      - uses: actions/upload-artifact@v2
        with:
          name: SDK
          path: ${{steps.sdk-var2.outputs.SDK_PATH}}
      - uses: actions/upload-artifact@v2
        with:
          name: ImageBuilder
          path: ${{steps.sdk-var2.outputs.IB_PATH}}
      - run: |
          tar -cf tmp.tar openwrt/bin/targets/*/*/packages
          rm openwrt/bin/targets/*/*/packages -rf
          mv ${{steps.sdk-var2.outputs.SDK_PATH}} .
          mv ${{steps.sdk-var2.outputs.IB_PATH}} .
          ls -lh openwrt/bin/targets/*/*/ || true
          ( ls openwrt/bin/targets/*/*/*.vdi >/dev/null 2>&1 ) && gzip -9n openwrt/bin/targets/*/*/*.vdi || true
          ( ls openwrt/bin/targets/*/*/*.vmdk >/dev/null 2>&1 ) && gzip -9n openwrt/bin/targets/*/*/*.vmdk || true
      - uses: actions/upload-artifact@v2
        with:
          name: Firmware
          path: ./openwrt/bin/targets
      - run: |-
          rm openwrt/bin/targets -rf
          tar -xf tmp.tar
          rm tmp.tar
          cd openwrt/bin
          tar -czf ../../Packages-00.tar.gz .
      - uses: actions/upload-artifact@v2
        with:
          name: Packages-00
          path: ./openwrt/bin
      - name: Upload Packages-00 to web
        run: |
          sha256sum Packages-00.tar.gz
          docker run -v $PWD/Packages-00.tar.gz:/openwrt/Packages-00.tar.gz immortalwrt/opde:base sudo chown opde:opde Packages-00.tar.gz
          docker run -v $PWD/Packages-00.tar.gz:/openwrt/Packages-00.tar.gz immortalwrt/opde:base transfer trs Packages-00.tar.gz > downloadLink
      - name: Extract link
        id: Packages-00-web
        run: |
          link=$(cat downloadLink | grep 'Download Link:' | grep -o 'https://.*')
          echo $link
          echo "::set-output name=LINK::$link"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |-
          tar -xf ${{steps.sdk-var2.outputs.SDK_NAME}}
          tar -xf ${{steps.sdk-var2.outputs.IB_NAME}}
          ls -l -h
      - name: hack docker file
        run: sed -i 's,FROM immortalwrt/opde:base,FROM immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }},' Dockerfile.sdk
      - name: Build and push sdk
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.sdk
          platforms: linux/amd64
          build-args: |
            SDK_PATH=./${{steps.sdk-var2.outputs.SDK_NAME_NO_PREFIX}}
          push: true
          tags: |
            immortalwrt/opde:sdk-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
      - name: set default docker tag
        run: |-
          docker pull immortalwrt/opde:sdk-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
          docker tag immortalwrt/opde:sdk-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:sdk
          docker tag immortalwrt/opde:sdk-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:sdk-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}
          docker images
      - name: push default docker tag1
        if: ${{ github.event.inputs.target == 'x86' && github.event.inputs.subtarget == '64' && github.event.inputs.branch == 'master' }}
        run: docker push immortalwrt/opde:sdk
      - name: push default docker tag2
        if: ${{ github.event.inputs.branch == 'master' }}
        run: docker push immortalwrt/opde:sdk-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}
      - name: Prepare assignment
        run: |
          docker run -v $PWD/${{steps.sdk-var2.outputs.SDK_NAME_NO_PREFIX}}:/openwrt immortalwrt/opde:sdk sudo chown opde:opde -R /openwrt
          docker run -v $PWD/${{steps.sdk-var2.outputs.SDK_NAME_NO_PREFIX}}:/openwrt immortalwrt/opde:sdk opde feeds
          docker run -v $PWD/${{steps.sdk-var2.outputs.SDK_NAME_NO_PREFIX}}:/openwrt immortalwrt/opde:sdk opde patch
          docker run -v $PWD/${{steps.sdk-var2.outputs.SDK_NAME_NO_PREFIX}}:/openwrt immortalwrt/opde:sdk opde config -a
      - name: Opde Assign in SDK container
        run: |
          is_init=""
          [ "${{ github.event.inputs.boostrap }}" -eq "0" ] || is_init="-init"
          docker run -v $PWD/${{steps.sdk-var2.outputs.SDK_NAME_NO_PREFIX}}:/openwrt -v $PWD/db:/db immortalwrt/opde:sdk opde assign $is_init /db
      - name: hack docker file
        run: sed -i 's,FROM immortalwrt/opde:sdk,FROM immortalwrt/opde:sdk-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }},' Dockerfile.worker
      - name: Build and push worker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.worker
          platforms: linux/amd64
          build-args: |
            WORKER_CONF_DIR=./${{steps.sdk-var2.outputs.SDK_NAME_NO_PREFIX}}/.opde/worker
          push: true
          tags: |
            immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
      - name: set default docker tag
        run: |-
          docker pull immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
          docker tag immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:worker
          docker tag immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}
          docker images
      - name: push default docker tag1
        if: ${{ github.event.inputs.target == 'x86' && github.event.inputs.subtarget == '64' && github.event.inputs.branch == 'master' }}
        run: docker push immortalwrt/opde:worker
      - name: push default docker tag2
        if: ${{ github.event.inputs.branch == 'master' }}
        run: docker push immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}
      - name: hack docker file
        run: sed -i 's,FROM immortalwrt/opde:base,FROM immortalwrt/opde:base-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }},' Dockerfile.ib
      - name: Build and push image builder
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.ib
          platforms: linux/amd64
          build-args: |
            IB_PATH=./${{steps.sdk-var2.outputs.IB_NAME_NO_PREFIX}}
          push: true
          tags: |
            immortalwrt/opde:ib-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
      - name: set default docker tag
        run: |-
          docker pull immortalwrt/opde:ib-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
          docker tag immortalwrt/opde:ib-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:ib
          docker tag immortalwrt/opde:ib-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:ib-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}
          docker images
      - name: push default docker tag1
        if: ${{ github.event.inputs.target == 'x86' && github.event.inputs.subtarget == '64' && github.event.inputs.branch == 'master' }}
        run: docker push immortalwrt/opde:ib
      - name: push default docker tag2
        if: ${{ github.event.inputs.branch == 'master' }}
        run: docker push immortalwrt/opde:ib-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}
      - name: Invoke Worker workflow
        if: ${{ github.event.inputs.subsequent == '1' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Worker
          token: ${{ secrets.BOT_PERSONAL_TOKEN }}
          inputs: '{ "subsequent": "1", "packages00URL": "${{steps.Packages-00-web.outputs.LINK}}", "branch": "${{ github.event.inputs.branch }}", "target": "${{ github.event.inputs.target }}", "subtarget": "${{ github.event.inputs.subtarget }}", "dlsvr": "${{ github.event.inputs.dlsvr }}"}'
      - name: Upload to ImmortalWRT Download server
        if: ${{ github.event.inputs.dlsvr == '1' }}
        env:
          DL_SERVER_SSH: "${{ secrets.DL_SERVER_SSH }}"
        run: |
          sudo rm openwrt/bin -rf
          sudo chown $(id -u -n):$(id -g -n) openwrt/bin.tar.gz
          tar -xzf openwrt/bin.tar.gz
          bash <(echo -e "${DL_SERVER_SSH}")
          rsync -azhv --chown www:www bin/* dlsvr:/mnt/immortalwrt-opde/${{ github.event.inputs.branch }}
