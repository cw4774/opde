name: Worker

on:
  workflow_dispatch:
    inputs:
      packages00URL:
        description: "Link of Packages-00.tar.gz"
        required: false
      branch:
        description: "Source branch(master,openwrt-18.06,...)"
        required: false
        default: "master"
      target:
        description: "Target(x86,bcm27xx,...)"
        required: false
        default: "x86"
      subtarget:
        description: "Subtarget(64,bcm2711,...)"
        required: false
        default: "64"
      onedrive:
        description: "upload to onedrive(0,1)"
        required: false
        default: "0"
      subsequent:
        description: "run subsequent workflow(0,1)"
        required: false
        default: "0"
jobs:
  worker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        worker:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          - "06"
          - "07"
          - "08"
          - "09"
          - "10"
          - "11"
          - "12"
          - "13"
          - "14"
          - "15"
          - "16"
          - "17"
          - "18"
          - "19"
          - "20"
    steps:
      - name: show input
        run: |-
          echo "Link of Packages-00.tar.gz: ${{ github.event.inputs.packages00URL }}"
          echo "Source branch: ${{ github.event.inputs.branch }}"
          echo "Target: ${{ github.event.inputs.target }}"
          echo "Subtarget: ${{ github.event.inputs.subtarget }}"
          echo "upload to onedrive: ${{ github.event.inputs.onedrive }}"
          echo "run subsequent workflow: ${{ github.event.inputs.subsequent }}"
      - name: Free disk space
        run: |
          sudo -E swapoff -a
          sudo -E rm -f /swapfile
          sudo -E docker image prune -a -f
          sudo -E snap set system refresh.retain=2
          sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu* powershell* msodbc*
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
          [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - name: Checkout OpenWRT repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: pull docker image
        run: |
          docker pull immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
          docker tag immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:worker
          docker images
      - name: Copy SDK
        run: |
          docker run -v $PWD/openwrt:/openwrt_bak immortalwrt/opde:worker sudo chown opde:opde -R /openwrt_bak
          docker run -v $PWD/openwrt:/openwrt_bak immortalwrt/opde:worker rsync -av /openwrt/ /openwrt_bak
      - name: Opde feeds
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker opde feeds
      - name: Opde config
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker opde config -i /worker/${{matrix.worker}}.worker.conf
      - name: Show config
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker cat .opde/min-config.in
      - name: Opde download
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker opde download
      - name: Opde build
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker opde build
      - name: Fix premission
        run: sudo chown $(id -u -n):$(id -g -n) -R openwrt

      - name: Prepare upload
        run: |
          mkdir /tmp/opdelogs && cp -rf ./openwrt/.opde ./openwrt/logs /tmp/opdelogs
          mv ./openwrt/bin /tmp/opdebin
          rm openwrt -rf
      - uses: actions/upload-artifact@v2
        with:
          name: Log-${{matrix.worker}}
          path: /tmp/opdelogs
      - uses: actions/upload-artifact@v2
        with:
          name: Packages-${{matrix.worker}}
          path: /tmp/opdebin
      # -
      # name: debug # docker run -it -v $PWD:/openwrt immortalwrt/opde:base bash
      # uses: mxschmitt/action-tmate@v2
      # if: always()

  bundle_packages:
    needs:
      - worker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Prepare dowload artifacts
        run: |
          mkdir openwrt/bin -p
      - uses: actions/download-artifact@v2
        with:
          name: Packages-20
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-19
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-18
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-17
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-16
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-15
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-14
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-13
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-12
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-11
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-10
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-09
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-08
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-07
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-06
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-05
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-04
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-03
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-02
          path: openwrt/bin
      - uses: actions/download-artifact@v2
        with:
          name: Packages-01
          path: openwrt/bin
      - name: Pull docker image
        run: |
          docker pull immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
          docker tag immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:worker
          docker images
      - name: Download Packages-00
        if: ${{ github.event.inputs.packages00URL }}
        run: |
          docker run -v $PWD:/openwrt immortalwrt/opde:worker sudo transfer ${{github.event.inputs.packages00URL}} -o Packages-00.tar.gz
          sudo chown $(id -u -n):$(id -g -n) Packages-00.tar.gz
          sha256sum Packages-00.tar.gz
          cd openwrt/bin
          tar -xzf ../../Packages-00.tar.gz
      - name: Count ipk
        run: |-
          find openwrt/bin -name "*.ipk" | grep -c ""
          find openwrt/bin -name "*.ipk"
      - name: Import key
        env:
          BUILD_KEY: ${{secrets.BUILD_KEY_PRIVATE}}
          BUILD_KEY_PUBLIC: ${{secrets.BUILD_KEY_PUBLIC}}
        run: |
          echo -e "$BUILD_KEY" > openwrt/key-build
          echo -e "$BUILD_KEY_PUBLIC" > openwrt/key-build.pub
          wc -c openwrt/key-build openwrt/key-build.pub
      - name: Copy SDK
        run: |
          docker run -v $PWD/openwrt:/openwrt_bak immortalwrt/opde:worker sudo chown opde:opde -R /openwrt_bak
          docker run -v $PWD/openwrt:/openwrt_bak immortalwrt/opde:worker rsync -a /openwrt/ /openwrt_bak
      - name: Opde feeds
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker opde feeds
      - name: Opde config
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker opde config
      - name: Opde download
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker opde download
      - name: Opde build
        run: docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker opde reindex
      - name: Fix premission
        run: sudo chown $(id -u -n):$(id -g -n) -R openwrt
      - name: show public key
        run: |
          for i in $(find openwrt/bin -name 'Packages.sig'); do echo "$i"; cat "$i"; done
      #- name: debug
      #  uses: mxschmitt/action-tmate@v3
      #  if: always()
      - uses: actions/upload-artifact@v2
        with:
          name: Packages
          path: openwrt/bin
      - name: Upload to OneDrive for ImmortalWRT
        if: ${{ github.event.inputs.onedrive == '1' }}
        env:
          OD_UPLOADER_CONF: "${{ secrets.ONEDRIVEUPLOADER_CONF }}"
        run: |
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker sudo chown opde:opde -R /openwrt
          echo -e "${OD_UPLOADER_CONF}" | sudo tee $PWD/openwrt/auth.json > /dev/null
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker sudo chown -R opde:opde /openwrt/auth.json
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker sudo ls -l /openwrt
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker find bin -name "vti*.ipk"
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker bash -c 'rm -rvf $(find bin -name "vti*.ipk")' # remove vti package, waiting fix(https://github.com/MoeClub/OneList/issues/66)
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker OneDriveUploader -c /openwrt/auth.json -r opde/${{ github.event.inputs.branch }} -s bin/targets
          docker run -v $PWD/openwrt:/openwrt immortalwrt/opde:worker OneDriveUploader -c /openwrt/auth.json -r opde/${{ github.event.inputs.branch }} -s bin/packages

  bundle_logs:
    needs:
      - worker
    runs-on: ubuntu-latest
    steps:
      - name: Prepare dowload artifacts
        run: |
          mkdir openwrt -p
      - uses: actions/download-artifact@v2
        with:
          name: Log-20
          path: openwrt/Log-20
      - uses: actions/download-artifact@v2
        with:
          name: Log-19
          path: openwrt/Log-19
      - uses: actions/download-artifact@v2
        with:
          name: Log-18
          path: openwrt/Log-18
      - uses: actions/download-artifact@v2
        with:
          name: Log-17
          path: openwrt/Log-17
      - uses: actions/download-artifact@v2
        with:
          name: Log-16
          path: openwrt/Log-16
      - uses: actions/download-artifact@v2
        with:
          name: Log-15
          path: openwrt/Log-15
      - uses: actions/download-artifact@v2
        with:
          name: Log-14
          path: openwrt/Log-14
      - uses: actions/download-artifact@v2
        with:
          name: Log-13
          path: openwrt/Log-13
      - uses: actions/download-artifact@v2
        with:
          name: Log-12
          path: openwrt/Log-12
      - uses: actions/download-artifact@v2
        with:
          name: Log-11
          path: openwrt/Log-11
      - uses: actions/download-artifact@v2
        with:
          name: Log-10
          path: openwrt/Log-10
      - uses: actions/download-artifact@v2
        with:
          name: Log-09
          path: openwrt/Log-09
      - uses: actions/download-artifact@v2
        with:
          name: Log-08
          path: openwrt/Log-08
      - uses: actions/download-artifact@v2
        with:
          name: Log-07
          path: openwrt/Log-07
      - uses: actions/download-artifact@v2
        with:
          name: Log-06
          path: openwrt/Log-06
      - uses: actions/download-artifact@v2
        with:
          name: Log-05
          path: openwrt/Log-05
      - uses: actions/download-artifact@v2
        with:
          name: Log-04
          path: openwrt/Log-04
      - uses: actions/download-artifact@v2
        with:
          name: Log-03
          path: openwrt/Log-03
      - uses: actions/download-artifact@v2
        with:
          name: Log-02
          path: openwrt/Log-02
      - uses: actions/download-artifact@v2
        with:
          name: Log-01
          path: openwrt/Log-01
      - name: Compress Logs
        run: tar -czvf Logs.tar.gz openwrt
      - name: Pull docker image
        run: |
          docker pull immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }}
          docker tag immortalwrt/opde:worker-${{ github.event.inputs.target }}_${{ github.event.inputs.subtarget }}-${{ github.event.inputs.branch }} immortalwrt/opde:worker
          docker images
      - name: Upload Logs to artifact
        uses: actions/upload-artifact@v2
        with:
          name: Logs
          path: Logs.tar.gz
      - name: Upload Logs to web
        run: |
          sha256sum Logs.tar.gz
          docker run -v $PWD/Logs.tar.gz:/openwrt/Logs.tar.gz immortalwrt/opde:worker sudo chown opde:opde Logs.tar.gz
          docker run -v $PWD/Logs.tar.gz:/openwrt/Logs.tar.gz immortalwrt/opde:worker transfer trs Logs.tar.gz > downloadLink
      - name: Extract link
        id: logs-web
        run: |
          link=$(cat downloadLink | grep 'Download Link:' | grep -o 'https://.*')
          echo $link
          echo "::set-output name=LINK::$link"
      - name: Invoke Collector workflow
        if: ${{ github.event.inputs.subsequent == '1'}}
        uses: benc-uk/workflow-dispatch@master
        with:
          workflow: Collector
          token: ${{ secrets.BOT_PERSONAL_TOKEN }}
          inputs: '{ "dataURL": "${{steps.logs-web.outputs.LINK}}", "branch": "${{ github.event.inputs.branch }}", "target": "${{ github.event.inputs.target }}", "subtarget": "${{ github.event.inputs.subtarget }}"}'
